package GUI.add;

import BUS.CTKMTheoSpBUS;
import BUS.KhuyenMaiBUS;
import BUS.SanPhamBUS;
import DTO.ChiTietKMTheoSPDTO;
import DTO.KhuyenMaiDTO;
import DTO.SanPhamDTO;
import DTO.Session;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class addKMTheoSP extends javax.swing.JPanel {

      private DefaultTableModel model;
      ArrayList<SanPhamDTO> list = new ArrayList<>();
      SanPhamBUS spBUS = new SanPhamBUS();
      KhuyenMaiBUS kmBus = new KhuyenMaiBUS();
      CTKMTheoSpBUS ctkmBus = new CTKMTheoSpBUS();

      /**
       * Creates new form addKMTheoSP
       */
      public addKMTheoSP() {
            initComponents();
            initTable();
            list = spBUS.getAll();
            loadDataToTable(list);
            tblListAllSP.setDefaultEditor(Object.class, null);
      }

      public final void initTable() {
            model = new DefaultTableModel();
            String[] headerTbl = new String[]{"STT", "Mã SP", "Tên SP", "Số lượng"};
            model.setColumnIdentifiers(headerTbl);
            tblListAllSP.setModel(model);
            tblListAllSP.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblListAllSP.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblListAllSP.getColumnModel().getColumn(2).setPreferredWidth(30);
            tblListAllSP.getColumnModel().getColumn(3).setPreferredWidth(30);

      }
//    public final void initTable2() {
//        model2 = new DefaultTableModel();
//        String[] headerTbl = new String[]{"STT", "Mã SP", "Tên SP", "Số lượng","Phần trăm giảm"};
//        model.setColumnIdentifiers(headerTbl);
//        tblListSP.setModel(model2);
//        tblListSP.getColumnModel().getColumn(0).setPreferredWidth(10);
//        tblListSP.getColumnModel().getColumn(1).setPreferredWidth(50);
//        tblListSP.getColumnModel().getColumn(2).setPreferredWidth(30);
//        tblListSP.getColumnModel().getColumn(3).setPreferredWidth(30);
//        tblListSP.getColumnModel().getColumn(3).setPreferredWidth(30);
//        
//    }

      public final void loadDataToTable(ArrayList<SanPhamDTO> sp) {
            try {
                  model.setRowCount(0);
                  int stt = 1;
                  for (SanPhamDTO i : sp) {
                        if (i.getSoluongton() != 0) {
                              model.addRow(new Object[]{
                                    stt++, i.getMasp(), i.getTensp(), i.getSoluongton()
                              });
                        }
                  }
            } catch (Exception e) {
            }
      }

      public final void loadDataToTable2(ArrayList<SanPhamDTO> sp, int phanTramGiam) {
            try {
                  model.setRowCount(0);
                  int stt = 1;
                  for (SanPhamDTO i : sp) {
                        if (i.getSoluongton() != 0) {
                              model.addRow(new Object[]{
                                    stt++, i.getMasp(), i.getTensp(), i.getSoluongton(), phanTramGiam
                              });
                        }
                  }
            } catch (Exception e) {
            }
      }
      
      public boolean validateSelectDate() throws ParseException {
        Date time_start = NgayBD.getDate();
        Date time_end = NgayKT.getDate();


        if (time_start != null && time_end != null && time_start.after(time_end)) {
            JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu", "Lỗi !", JOptionPane.ERROR_MESSAGE);
            NgayKT.setDate(null);
            return false;
        }
         if (time_start.equals(time_end)) {
            JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu", "Lỗi !", JOptionPane.ERROR_MESSAGE);
            NgayKT.setDate(null); // Reset ngày kết thúc
            return false;
        }

        return true;
    }

      /**
       * This method is called from within the constructor to initialize the
       * form. WARNING: Do NOT modify this code. The content of this method is
       * always regenerated by the Form Editor.
       */
      @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblListAllSP = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtPhanTramGiam = new javax.swing.JTextField();
        btnthemsp = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnTaoKM = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblListSPKM = new javax.swing.JTable();
        NgayBD = new com.toedter.calendar.JDateChooser();
        NgayKT = new com.toedter.calendar.JDateChooser();
        btnXoaSP = new javax.swing.JButton();

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tblListAllSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã SP", "Tên SP", "Số lượng"
            }
        ));
        tblListAllSP.setRowHeight(50);
        tblListAllSP.setSelectionBackground(new java.awt.Color(176, 212, 235));
        tblListAllSP.setSelectionForeground(new java.awt.Color(10, 0, 0));
        jScrollPane5.setViewportView(tblListAllSP);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Phần trăm giảm");

        txtPhanTramGiam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhanTramGiamActionPerformed(evt);
            }
        });

        btnthemsp.setBackground(new java.awt.Color(102, 204, 0));
        btnthemsp.setForeground(new java.awt.Color(255, 255, 255));
        btnthemsp.setText("Thêm sản phẩm");
        btnthemsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemspActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("DANH SÁCH SẢN PHẨM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(3, 3, 3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 16, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPhanTramGiam, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnthemsp, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthemsp, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhanTramGiam)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setText("Ngày bắt đầu:");

        jLabel16.setText("Ngày kết thúc:");

        btnTaoKM.setBackground(new java.awt.Color(102, 204, 0));
        btnTaoKM.setForeground(new java.awt.Color(255, 255, 255));
        btnTaoKM.setText("Tạo mã khuyến mãi");
        btnTaoKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoKMActionPerformed(evt);
            }
        });

        tblListSPKM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã SP", "Tên SP", "Số lượng", "Phần trăm giảm"
            }
        ));
        tblListSPKM.setRowHeight(50);
        tblListSPKM.setSelectionBackground(new java.awt.Color(176, 212, 235));
        tblListSPKM.setSelectionForeground(new java.awt.Color(10, 0, 0));
        jScrollPane6.setViewportView(tblListSPKM);

        NgayBD.setDateFormatString("yyyy-MM-dd");

        NgayKT.setDateFormatString("yyyy-MM-dd");

        btnXoaSP.setBackground(new java.awt.Color(255, 51, 51));
        btnXoaSP.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaSP.setText("Xóa sản phẩm");
        btnXoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnTaoKM, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(205, 205, 205))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(NgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(btnXoaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnXoaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTaoKM, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPhanTramGiamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhanTramGiamActionPerformed
          // TODO add your handling code here:
    }//GEN-LAST:event_txtPhanTramGiamActionPerformed

    private void btnthemspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemspActionPerformed
        
          int selectedRow = tblListAllSP.getSelectedRow();
          if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một sản phẩm từ bảng 1.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
          }

          int phanTramGiam;
          try {
                phanTramGiam = Integer.parseInt(txtPhanTramGiam.getText().trim());
                if (phanTramGiam <= 0 || phanTramGiam > 100) { // Kiểm tra giới hạn phần trăm giảm
                      throw new NumberFormatException();
                }
          } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập phần trăm giảm hợp lệ (1-100).", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
          }
          Object maSP = tblListAllSP.getValueAt(selectedRow, 1);

          // Kiểm tra xem mã sản phẩm đã tồn tại trong bảng tblphieunhapout chưa
          DefaultTableModel dt2 = (DefaultTableModel) tblListSPKM.getModel();
          for (int i = 0; i < dt2.getRowCount(); i++) {
                if (dt2.getValueAt(i, 1).equals(maSP)) {
                      JOptionPane.showMessageDialog(this, "Sản phẩm đã có trong danh sách.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                      return;
                }
          }

          // Lấy dữ liệu sản phẩm từ dòng được chọn
          Object[] rowData = new Object[5];
          int stt = dt2.getRowCount() + 1;
          rowData[0] = stt;
          rowData[1] = tblListAllSP.getValueAt(selectedRow, 1); // Mã SP
          rowData[2] = tblListAllSP.getValueAt(selectedRow, 2); // Tên SP
          rowData[3] = tblListAllSP.getValueAt(selectedRow, 3);// Số lượng
          rowData[4] = phanTramGiam; // Phần trăm giảm

          // Thêm thông tin sản phẩm vào bảng 2
          dt2.addRow(rowData);

          // Xóa phần trăm giảm đã nhập để chuẩn bị cho lần nhập tiếp theo
          txtPhanTramGiam.setText("");


    }//GEN-LAST:event_btnthemspActionPerformed

    private void btnTaoKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoKMActionPerformed
        
        String message = "";
          if (tblListSPKM.getRowCount() == 0) {
                message = "Vui lòng chọn sản phẩm khuyến mãi!";

          } else if (NgayBD.getDate() == null) {
                message = "Vui lòng chọn ngày bắt đầu khuyến mãi!";
          } else if (NgayKT.getDate() == null) {
                message = "Vui lòng chọn ngày kết thúc khuyến mãi!";
          } else {
                int makm = kmBus.kmDAO.getAutoIncrement();
                String loaiKM = "Theo sản phẩm";
                Date ngayBD = NgayBD.getDate();
                Date ngayKT = NgayKT.getDate();

                KhuyenMaiDTO kmDTO = new KhuyenMaiDTO();
                kmDTO.setLoaiKM(loaiKM);
                kmDTO.setTgBatDau(ngayBD);
                kmDTO.setTgKetThuc(ngayKT);
                
                boolean isOverLap = false;
                for (int i = 0; i < tblListSPKM.getRowCount(); i++) {
                      ChiTietKMTheoSPDTO ctkmDTO = new ChiTietKMTheoSPDTO();
                      ctkmDTO.setTgBatDau(ngayBD);
                      ctkmDTO.setTgKetThuc(ngayKT);
                      if (kmBus.kmDAO.isOverLapKMSP(new java.sql.Date(ctkmDTO.getTgBatDau().getTime()), new java.sql.Date(ctkmDTO.getTgKetThuc().getTime()))) {
                            JOptionPane.showMessageDialog(null, "Thời gian khuyến mãi không được trùng lặp với các chương trình đã tạo trước!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                            isOverLap = true;
                            break;
                      }
                }

            try {
                if (kmBus.insert(kmDTO) && !isOverLap && validateSelectDate()) {
                    boolean success = true;
                    // Duyệt qua từng sản phẩm trong bảng để thêm chi tiết khuyến mãi
                    for (int i = 0; i < tblListSPKM.getRowCount(); i++) {
                        ChiTietKMTheoSPDTO ctkmDTO = new ChiTietKMTheoSPDTO();
                        
                        int maSP = Integer.parseInt(tblListSPKM.getValueAt(i, 1).toString());
                        int phanTramGiam = Integer.parseInt(tblListSPKM.getValueAt(i, 4).toString());
                        ctkmDTO.setMaKM(makm);
                        ctkmDTO.setMaSP(maSP);
                        ctkmDTO.setNvTao(Session.getNv().getHoten());
                        ctkmDTO.setPhanTramGiam(phanTramGiam);
                        ctkmDTO.setTgBatDau(ngayBD);
                        ctkmDTO.setTgKetThuc(ngayKT);
                        if (!ctkmBus.insert(ctkmDTO)) {
                            success = false;
                            message = "Đã xảy ra lỗi khi thêm sản phẩm có mã " + maSP;
                            break;
                        }
                    }
                    
                    if (success) {
                        JOptionPane.showMessageDialog(null, "Tạo thành công khuyến mãi!");
                    } else {
                        JOptionPane.showMessageDialog(null, message, "Lỗi", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi khi tạo khuyến mãi!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            } catch (ParseException ex) {
                Logger.getLogger(addKMTheoSP.class.getName()).log(Level.SEVERE, null, ex);
            }
          }

          if (!message.isEmpty()) {
                JOptionPane.showMessageDialog(this, message, "Thông báo", JOptionPane.WARNING_MESSAGE);
          }

    }//GEN-LAST:event_btnTaoKMActionPerformed

    private void btnXoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPActionPerformed
          int selectedRow = tblListSPKM.getSelectedRow();
          if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng sản phẩm cần xóa", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
          }
          DefaultTableModel dt2 = (DefaultTableModel) tblListSPKM.getModel();
          dt2.removeRow(selectedRow);
    }//GEN-LAST:event_btnXoaSPActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser NgayBD;
    private com.toedter.calendar.JDateChooser NgayKT;
    private javax.swing.JButton btnTaoKM;
    private javax.swing.JButton btnXoaSP;
    private javax.swing.JButton btnthemsp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable tblListAllSP;
    private javax.swing.JTable tblListSPKM;
    private javax.swing.JTextField txtPhanTramGiam;
    // End of variables declaration//GEN-END:variables
}
