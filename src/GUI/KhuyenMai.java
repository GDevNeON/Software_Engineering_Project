package GUI;

import BUS.CTKMTheoHdBUS;
import BUS.CTKMTheoSpBUS;
import BUS.KhuyenMaiBUS;
import Controler.SearchKhachHang;
import Controler.SearchKhuyenMai;
import DTO.ChiTietKMTheoHDDTO;
import DTO.ChiTietKMTheoSPDTO;
import DTO.KhachHangDTO;
import DTO.KhuyenMaiDTO;
import DTO.NhanVienDTO;
import DTO.PhieuNhapDTO;
import GUI.add.addKMTheoHoaDon;
import GUI.add.addKMTheoSP;
import GUI.details.detailctkmtheohd;
import GUI.details.detailctkmtheosp;
import GUI.details.detailsphieunhap;
import java.awt.Frame;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class KhuyenMai extends javax.swing.JPanel {

    ArrayList<KhuyenMaiDTO> list=new ArrayList<>();
    private DefaultTableModel model;
    JpanelLoader jp= new JpanelLoader();
    KhuyenMaiBUS kmBUS=new KhuyenMaiBUS();
    CTKMTheoHdBUS ctkmTheoHdBUS=new CTKMTheoHdBUS();
    CTKMTheoSpBUS ctkmTheoSPBus= new CTKMTheoSpBUS();
    /**
     * Creates new form KhuyenMai
     */
    public KhuyenMai() {
        initComponents();
        initTable();
        cbxAllDisplay();
        list = kmBUS.getAll();      
        loadDataToTable(list);
        table.setDefaultEditor(Object.class, null);    
    }
    
    public void cbxAllDisplay() {
        cbxAll.addItem("Tất cả");
        String[] headerTbl = new String[]{"Mã khuyến mãi", "Loại khuyến mãi","Thời gian bắt đầu","Thời gian kết thúc","Tình trạng"};
        for (String i : headerTbl) {
            cbxAll.addItem("" + i);
        }
    }

    public final void initTable() {
        model = new DefaultTableModel();
        String[] headerTbl = new String[]{"Mã KM", "Loại KM", "TG Bắt đầu", "TG Kết thúc", "Tình trạng"};
        model.setColumnIdentifiers(headerTbl);
        table.setModel(model);
        table.getColumnModel().getColumn(0).setPreferredWidth(10);
        table.getColumnModel().getColumn(1).setPreferredWidth(50);
        table.getColumnModel().getColumn(2).setPreferredWidth(30);
        table.getColumnModel().getColumn(3).setPreferredWidth(30);
        table.getColumnModel().getColumn(4).setPreferredWidth(30);
        
    }
    
    public final void loadDataToTable(ArrayList<KhuyenMaiDTO> km) {
        try {
            model.setRowCount(0);
            Date currentDate= new Date();           
            for (KhuyenMaiDTO i : km) { 
                if (i.getTrangThai()==1){
                    String tinhTrang="";
                    Date tgKetThuc=i.getTgKetThuc(); 
                    Date tgBatDau=i.getTgBatDau();
                    if (tgKetThuc.before(currentDate)){
                        tinhTrang="Hết hạn";
                    }
                    else if (!tgBatDau.after(currentDate) && !tgKetThuc.before(currentDate)){
                        tinhTrang="Đang khuyến mãi";
                    }
                    else{
                        tinhTrang="Chưa bắt đầu";
                    }
                    model.addRow(new Object[]{
                        i.getMaKM(), i.getLoaiKM(), i.getTgBatDau(), i.getTgKetThuc(),tinhTrang
                    });
                }
                
                
            }           
        } catch (Exception e) {
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
      // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
      private void initComponents() {

            jPanel3 = new javax.swing.JPanel();
            jLabel3 = new javax.swing.JLabel();
            jLabel4 = new javax.swing.JLabel();
            DateFrom = new com.toedter.calendar.JDateChooser();
            DateTo = new com.toedter.calendar.JDateChooser();
            jButton1 = new javax.swing.JButton();
            jPanel5 = new javax.swing.JPanel();
            jButton23 = new javax.swing.JButton();
            txttimkiem = new javax.swing.JTextField();
            cbxAll = new javax.swing.JComboBox<>();
            jToolBar3 = new javax.swing.JToolBar();
            btnThem = new javax.swing.JButton();
            btnXoa = new javax.swing.JButton();
            btnChiTiet = new javax.swing.JButton();
            jScrollPane2 = new javax.swing.JScrollPane();
            table = new javax.swing.JTable();

            setPreferredSize(new java.awt.Dimension(1000, 452));

            jPanel3.setBackground(new java.awt.Color(255, 255, 255));

            jLabel3.setText("Từ ngày");

            jLabel4.setText("Đến ngày");

            DateFrom.setDateFormatString("yyyy-MM-dd");

            DateTo.setDateFormatString("yyyy-MM-dd");

            jButton1.setText("Tìm");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButton1ActionPerformed(evt);
                  }
            });

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                  jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addComponent(DateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addComponent(jLabel3))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addComponent(jLabel4)
                              .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(DateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25))
            );
            jPanel3Layout.setVerticalGroup(
                  jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(jLabel3)
                              .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                              .addComponent(DateFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(DateTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                        .addContainerGap(15, Short.MAX_VALUE))
            );

            jPanel5.setBackground(new java.awt.Color(255, 255, 255));
            jPanel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            jPanel5.setPreferredSize(new java.awt.Dimension(1110, 90));

            jButton23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/refresh.png"))); // NOI18N
            jButton23.setText("Làm mới");
            jButton23.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButton23ActionPerformed(evt);
                  }
            });

            txttimkiem.setText("Nhập nội dung tìm kiếm...");
            txttimkiem.addFocusListener(new java.awt.event.FocusAdapter() {
                  public void focusGained(java.awt.event.FocusEvent evt) {
                        txttimkiemFocusGained(evt);
                  }
            });
            txttimkiem.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        txttimkiemActionPerformed(evt);
                  }
            });
            txttimkiem.addKeyListener(new java.awt.event.KeyAdapter() {
                  public void keyReleased(java.awt.event.KeyEvent evt) {
                        txttimkiemKeyReleased(evt);
                  }
            });

            cbxAll.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        cbxAllActionPerformed(evt);
                  }
            });

            jToolBar3.setBackground(new java.awt.Color(255, 255, 255));
            jToolBar3.setBorder(null);
            jToolBar3.setRollover(true);

            btnThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
            btnThem.setText("THÊM");
            btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            btnThem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            btnThem.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        btnThemActionPerformed(evt);
                  }
            });
            jToolBar3.add(btnThem);

            btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
            btnXoa.setText("XÓA");
            btnXoa.setFocusable(false);
            btnXoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            btnXoa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            btnXoa.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        btnXoaActionPerformed(evt);
                  }
            });
            jToolBar3.add(btnXoa);

            btnChiTiet.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            btnChiTiet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/detail.png"))); // NOI18N
            btnChiTiet.setText("XEM CHI TIẾT");
            btnChiTiet.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            btnChiTiet.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            btnChiTiet.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        btnChiTietActionPerformed(evt);
                  }
            });
            jToolBar3.add(btnChiTiet);

            javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
            jPanel5.setLayout(jPanel5Layout);
            jPanel5Layout.setHorizontalGroup(
                  jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 338, Short.MAX_VALUE)
                        .addComponent(cbxAll, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton23)
                        .addGap(22, 22, 22))
            );
            jPanel5Layout.setVerticalGroup(
                  jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addComponent(cbxAll, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                  .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
            );

            table.setModel(new javax.swing.table.DefaultTableModel(
                  new Object [][] {

                  },
                  new String [] {
                        "Mã KM", "Loại KM", "Thời gian bắt đầu", "Thời gian kết thúc", "Phần trăm giảm"
                  }
            ));
            table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
            table.setRowHeight(50);
            table.setSelectionBackground(new java.awt.Color(176, 212, 235));
            table.setSelectionForeground(new java.awt.Color(10, 0, 0));
            jScrollPane2.setViewportView(table);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                  layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                  .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(jScrollPane2)
            );
            layout.setVerticalGroup(
                  layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                        .addContainerGap())
            );
      }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Fillter();
        } catch (ParseException ex) {
            Logger.getLogger(KhuyenMai.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
       
        txttimkiem.setText("Nhập nội dung tìm kiếm...");
        loadDataToTable(kmBUS.kmDAO.selectAll());
        cbxAll.setSelectedIndex(0);
//        cbncc.setSelectedIndex(0);
//        cbnvien.setSelectedIndex(0);
//        txtfromMoney.setText("");
//        txttoMoney.setText("");
        DateFrom.setDate(null);
        DateTo.setDate(null);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void txttimkiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txttimkiemFocusGained
        if (txttimkiem.getText().equals("Nhập nội dung tìm kiếm...")) {
            txttimkiem.setText("");
        }
    }//GEN-LAST:event_txttimkiemFocusGained

    private void txttimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimkiemActionPerformed

    private void txttimkiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttimkiemKeyReleased
        ArrayList<KhuyenMaiDTO> result = new ArrayList<>();
        String text = txttimkiem.getText();
        String choose = (String) cbxAll.getSelectedItem();
        switch (choose) {
            case "Tất cả":
                result = SearchKhuyenMai.getInstance().searchTatCa(text);
                break;
            case "Mã khuyến mãi":
                result = SearchKhuyenMai.getInstance().searchMaKM(text);
                break;
            case "Loại khuyến mãi":
                result = SearchKhuyenMai.getInstance().searchLoaiKM(text);
                break;
            case "Thời gian bắt đầu":
                result = SearchKhuyenMai.getInstance().searchTgBD(text);
                break;
            case "Thời gian kết thúc":
                result = SearchKhuyenMai.getInstance().searchTgKT(text);
                break;
            case "Tình trạng":
                result = SearchKhuyenMai.getInstance().searchTinhTrang(text);
            
        }
        loadDataToTable(result);
       
    }//GEN-LAST:event_txttimkiemKeyReleased

    private void cbxAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAllActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxAllActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        
        String[] options = {"Theo hóa đơn","Theo sản phẩm",  "Hủy"}; 
        int selection = JOptionPane.showOptionDialog(null,"Bạn muốn tạo khuyến mãi theo sản phẩm hay hóa đơn?","Lựa chọn khuyến mãi",JOptionPane.DEFAULT_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[2]);
        if (selection==0){
           addKMTheoHoaDon kmTheoHD= new addKMTheoHoaDon((JFrame) SwingUtilities.getWindowAncestor(this), true);
           kmTheoHD.setVisible(true);
           if (kmTheoHD.isAddedSuccessfully())
               loadDataToTable(kmBUS.kmDAO.selectAll());
               
        }
        if (selection==1){
            addKMTheoSP kmTheoSP = new addKMTheoSP();
            jp.jPanelLoader(admin.panel_load, kmTheoSP);
            
            
        }
             
    }//GEN-LAST:event_btnThemActionPerformed

    public KhuyenMaiDTO getKhuyenMaiSelect() {
        int i_row = table.getSelectedRow();
        KhuyenMaiDTO km = kmBUS.kmDAO.selectAll().get(i_row);
        return km;
    }
    private void btnChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTietActionPerformed
         int i_row = table.getSelectedRow();
         if (table.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn khuyến mãi để xem");
            }
         else{
             int maKM = (int) table.getValueAt(i_row, 0);        
            String loaikm=(String)table.getValueAt(i_row, 1);
            if (loaikm.equals("Theo hóa đơn")){       
               ChiTietKMTheoHDDTO ctkmHD = ctkmTheoHdBUS.ctDao.getChiTietById(maKM);            
                detailctkmtheohd a = new detailctkmtheohd((JFrame) SwingUtilities.getWindowAncestor(this), true,ctkmHD);
                a.setVisible(true);      
            }
            else{
                ChiTietKMTheoSPDTO ctkmSP=ctkmTheoSPBus.ctDao.getChiTietById(maKM);         
                detailctkmtheosp a=new detailctkmtheosp((JFrame) SwingUtilities.getWindowAncestor(this), true,ctkmSP,maKM);
                a.setVisible(true);
            }
         }
         
    
        
    }//GEN-LAST:event_btnChiTietActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
       int selectedRow=table.getSelectedRow();
        if ( selectedRow== -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn khuyến mãi muốn xoá");
        } else {
            String tinhTrang=table.getValueAt(selectedRow, 4).toString();
            if (tinhTrang.equals("Hết hạn")){
                int output = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xoá khuyến mãi", "Xác nhận xoá khuyến mãi", JOptionPane.YES_NO_OPTION);
                if (output == JOptionPane.YES_OPTION) {                   
                    KhuyenMaiDTO kmDTO=kmBUS.kmDAO.getKMByID(Integer.parseInt(table.getValueAt(selectedRow, 0).toString()));                   
                    kmBUS.kmDAO.delete(kmDTO);                                      
                    JOptionPane.showMessageDialog(this, "Xóa thành công !");
                    loadDataToTable(kmBUS.kmDAO.selectAll());
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Không thể xóa khuyến mãi chưa hết hạn!", "Lỗi", JOptionPane.OK_OPTION);
                
            }
            
            
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    public boolean validateSelectDate() throws ParseException {
    Date time_start = DateFrom.getDate();
    Date time_end = DateTo.getDate();

  
    if (time_start != null && time_end != null && time_start.after(time_end)) {
        JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu", "Lỗi !", JOptionPane.ERROR_MESSAGE);
        DateTo.setDate(null);
        return false;
    }
     if (time_start.equals(time_end)) {
        JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu", "Lỗi !", JOptionPane.ERROR_MESSAGE);
        DateTo.setDate(null); // Reset ngày kết thúc
        return false;
    }
    
    return true;
}
    public void Fillter() throws ParseException {
    if (validateSelectDate()) {
        // Print debug statement
        System.out.println("Filtering data...");

        // Retrieve the start and end dates
        Date time_start = DateFrom.getDate();
        Date time_end = DateTo.getDate();

        // If no start date is selected, use the earliest possible date
        if (time_start == null) {
            time_start = new Date(0); // Set to the earliest possible date (January 1, 1970)
        }

        // If no end date is selected, use the end of the current day
        if (time_end == null) {
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(new Date()); // Set to the current date
            calendar.set(Calendar.HOUR_OF_DAY, 23);
            calendar.set(Calendar.MINUTE, 59);
            calendar.set(Calendar.SECOND, 59);
            calendar.set(Calendar.MILLISECOND, 999);
            time_end = calendar.getTime();
        }

        // Perform the filtering based on selected dates
        this.list = kmBUS.fillerPhieuNhap(time_start, time_end);

        // Load the filtered data into the table
        loadDataToTable(list);
    }
}

      // Variables declaration - do not modify//GEN-BEGIN:variables
      private com.toedter.calendar.JDateChooser DateFrom;
      private com.toedter.calendar.JDateChooser DateTo;
      private javax.swing.JButton btnChiTiet;
      private javax.swing.JButton btnThem;
      private javax.swing.JButton btnXoa;
      private javax.swing.JComboBox<String> cbxAll;
      private javax.swing.JButton jButton1;
      private javax.swing.JButton jButton23;
      private javax.swing.JLabel jLabel3;
      private javax.swing.JLabel jLabel4;
      private javax.swing.JPanel jPanel3;
      private javax.swing.JPanel jPanel5;
      private javax.swing.JScrollPane jScrollPane2;
      private javax.swing.JToolBar jToolBar3;
      private javax.swing.JTable table;
      private javax.swing.JTextField txttimkiem;
      // End of variables declaration//GEN-END:variables
}
